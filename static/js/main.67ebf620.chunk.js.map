{"version":3,"sources":["components/section/Section.module.css","components/container/Container.module.css","components/feedbackBtn/FeedbackBtn.module.css","components/feedbackOptions/FeedbackOptions.module.css","components/statistics/Statistics.module.css","components/container/Container.js","components/section/Section.js","components/feedbackBtn/FeedbackBtn.js","components/feedbackOptions/FeedbackOptions.js","components/statistics/Statistics.js","components/notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","FeedbackBtn","data","onBtnClick","feedbackBtn","type","name","onClick","FeedbackOptions","options","onLeaveFeedback","feedback","map","option","index","Statistics","good","neutral","bad","total","positivePercentage","statistics","Notification","message","App","useState","setGood","setNeutral","setBad","positiveFeedbackPercentage","Math","round","countPositiveFeedbackPercentage","event","currentTarget","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,SAAW,oC,gBCA7BD,EAAOC,QAAU,CAAC,WAAa,iC,+JCUhBC,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCaxBI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACxB,OACE,sBAAKC,UAAWC,IAAEI,QAAlB,UACE,oBAAIL,UAAWC,IAAEG,MAAjB,SAAyBA,IACxBL,M,gBCcQO,EAlBK,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAC3B,OACE,wBACER,UAAWC,IAAEQ,YACbC,KAAK,SACLC,KAAMJ,EACNK,QAASJ,EAJX,SAMGD,K,gBCQQM,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKf,UAAWC,IAAEe,SAAlB,SACGF,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACX,cAAC,EAAD,CAAyBZ,KAAMW,EAAQV,WAAYO,GAAjCI,S,gBCeXC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIzB,UAAWC,IAAEyB,WAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCASE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC+HEC,EA1HH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KA0BMT,EAFGH,EAAOC,EAAUC,EAOpBW,EAHkC,SAAAV,GACtC,OAAOW,KAAKC,MAAOf,EAAOG,EAAS,KAEFa,CAAgCb,GAEnE,OACE,sBAAKxB,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,4BACA,eAAC,EAAD,WACE,cAAC,EAAD,CAASI,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEU,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAtCU,SAAAuB,GAGlB,OAFmBA,EAAMC,cAAc5B,MAGrC,IAAK,OACHoB,GAAQ,SAAAS,GAAI,OAAIA,EAAO,KACvB,MAEF,IAAK,UACHR,GAAW,SAAAQ,GAAI,OAAIA,EAAO,KAC1B,MAEF,IAAK,MACHP,GAAO,SAAAO,GAAI,OAAIA,EAAO,WA4BtB,cAAC,EAAD,CAASpC,MAAO,aAAhB,SACGoB,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBS,IAGtB,cAAC,EAAD,CAAcN,QAAQ,kCC3DlCa,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.67ebf620.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ogmk\",\"title\":\"Section_title__3tFCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__F1eb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackBtn_feedbackBtn__3E2X6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__1Rt6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__324Ba\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackBtn.module.css';\n\nconst FeedbackBtn = ({ data, onBtnClick }) => {\n  return (\n    <button\n      className={s.feedbackBtn}\n      type=\"button\"\n      name={data}\n      onClick={onBtnClick}\n    >\n      {data}\n    </button>\n  );\n};\n\nFeedbackBtn.propTypes = {\n  data: PropTypes.string.isRequired,\n  onBtnClick: PropTypes.func.isRequired,\n};\n\nexport default FeedbackBtn;\n","import PropTypes from 'prop-types';\nimport FeedbackBtn from '../feedbackBtn/FeedbackBtn';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.feedback}>\n      {options.map((option, index) => (\n        <FeedbackBtn key={index} data={option} onBtnClick={onLeaveFeedback} />\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.statistics}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Container from './components/container/Container';\nimport Section from './components/section/Section';\nimport FeedbackOptions from './components/feedbackOptions/FeedbackOptions';\nimport Statistics from './components/statistics/Statistics';\nimport Notification from './components/notification/Notification';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = event => {\n    const targetName = event.currentTarget.name;\n\n    switch (targetName) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const total = countTotalFeedback();\n\n  const countPositiveFeedbackPercentage = total => {\n    return Math.round((good / total) * 100);\n  };\n  const positiveFeedbackPercentage = countPositiveFeedbackPercentage(total);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"AppHeader\">Reviews widget</h1>\n      <Container>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={addFeedback}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </Container>\n    </div>\n  );\n};\n\n// class App extends React.Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n// addFeedback = event => {\n//   const targetName = event.currentTarget.name;\n//   this.setState(prevState => ({\n//     [targetName]: prevState[targetName] + 1,\n//   }));\n// };\n\n// countTotalFeedback = () => {\n//   const { good, neutral, bad } = this.state;\n//   return good + neutral + bad;\n// };\n\n// countPositiveFeedbackPercentage = total => {\n//   return Math.round((this.state.good / total) * 100);\n// };\n\n//   render() {\n//     const total = this.countTotalFeedback();\n//     const positiveFeedbackPercentage =\n//       this.countPositiveFeedbackPercentage(total);\n//     const { good, neutral, bad } = this.state;\n\n//     return (\n// <div className=\"App\">\n//   <h1 className=\"AppHeader\">Reviews widget</h1>\n//   <Container>\n//     <Section title={'Please leave feedback'}>\n//       <FeedbackOptions\n//         options={['good', 'neutral', 'bad']}\n//         onLeaveFeedback={this.addFeedback}\n//       />\n//     </Section>\n//     <Section title={'Statistics'}>\n//       {total > 0 ? (\n//         <Statistics\n//           good={good}\n//           neutral={neutral}\n//           bad={bad}\n//           total={total}\n//           positivePercentage={positiveFeedbackPercentage}\n//         />\n//       ) : (\n//         <Notification message=\"There is no feedback\" />\n//       )}\n//     </Section>\n//   </Container>\n// </div>\n//     );\n//   }\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}